name: Cross-Compile Binaries

on:
  workflow_dispatch:          # <-- enables manual runs :contentReference[oaicite:0]{index=0}
  workflow_call:                        # makes this workflow callable :contentReference[oaicite:7]{index=7}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - uses: actions/checkout@v3

      # 1) Setup Node & build frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      - run: npm ci
      - run: npm run build

      # 2) Setup Rust & target
      - name: Setup Rust
        uses: actions/setup-rust@v1
        with:
          toolchain: stable
      - run: rustup target add ${{ matrix.target }}

      # 3) If building Windows, install MinGW
      - name: Install MinGW for Windows crossâ€‘compile
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      # 4) Build for each target
      - name: Cargo build --release for ${{ matrix.target }}
        run: |
          cd src-tauri
          cargo build --release --target ${{ matrix.target }}

      # 5) Collect artifacts
      - name: Upload bundles/exe
        uses: actions/upload-artifact@v3
        with:
          name: tauri-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle
            src-tauri/target/${{ matrix.target }}/release/${{ matrix.target == 'x86_64-pc-windows-gnu' && 'jarvis-app.exe' || '' }}