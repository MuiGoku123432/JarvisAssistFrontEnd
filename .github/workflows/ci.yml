name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        rust-toolchain: [stable]

    steps:
      - uses: actions/checkout@v3

      # 1) Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Frontend Dependencies
        run: npm ci

      # - name: Frontend Lint & Test
      #   run: |
      #     npm run lint
      #     npm test

      # 2) Build the React app
      - name: Build Frontend
        run: npm run build

      # 3) Setup Rust (with clippy and rustfmt)
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: clippy, rustfmt
      # 4) Install native deps for glib-sys (Ubuntu)
      - name: Install GLib & pkg-config
        run: |
          sudo apt-get update
          sudo apt install \
            build-essential pkg-config curl wget file \
            libssl-dev \
            libglib2.0-dev \
            libgtk-3-dev libgdk-pixbuf2.0-dev libpango1.0-dev libcairo2-dev \
            libayatana-appindicator3-dev librsvg2-dev libsecret-1-dev \
            libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev \
            libasound2-dev \
            libxdo-dev \
            webkit2gtk-driver

      # 4) Check Rust formatting (runs in src-tauri where Cargo.toml lives)
      # - name: Check Rust formatting
      #   working-directory: src-tauri
      #   run: cargo fmt -- --check

      # 5) Cache Cargo registry & git data
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # 6) Tauri build (dev binaries)
      - name: Tauri Build (dev binaries)
        run: |
          cd src-tauri
          cargo build --release
